{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"RecordsTest\",\n  data() {\n    return {\n      tableData: [],\n      currentPage: 1,\n      pageSize: 8,\n      total: null\n    };\n  },\n  methods: {\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      const user = JSON.parse(localStorage.getItem('user'));\n      const student_id = parseInt(user.student_id);\n      const page = this.currentPage;\n      const pageSize = this.pageSize;\n      axios.get('http://localhost:4399/records', {\n        params: {\n          student_id: student_id,\n          page,\n          pageSize\n        }\n      }).then(response => {\n        this.tableData = response.data.rows;\n        this.total = response.data.total;\n      }).catch(error => {\n        this.$message.error('出错啦~');\n        console.error(error);\n      });\n    },\n    handleSizeChange(val) {\n      this.pageSize = val;\n      const user = JSON.parse(localStorage.getItem('user'));\n      const student_id = parseInt(user.student_id);\n      const page = this.pageSize;\n      const pageSize = this.pageSize;\n      axios.get('http://localhost:4399/records', {\n        params: {\n          student_id: student_id,\n          page,\n          pageSize\n        }\n      }).then(response => {\n        this.tableData = response.data.rows;\n        this.total = response.data.total;\n      }).catch(error => {\n        this.$message.error('出错啦~');\n        console.error(error);\n      });\n    },\n    formatDate(column) {\n      const date = new Date(column.time);\n      const formattedDate = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      });\n      return formattedDate;\n    },\n    deleteRow(index, rows) {\n      this.$confirm('此操作将删除该记录(非永久性删除), 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        rows.splice(index, 1);\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    }\n  },\n  mounted() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const studentId = parseInt(user.studentId);\n    const page = this.currentPage4;\n    const pageSize = this.pageSize;\n    axios.get('http://localhost:4399/records', {\n      params: {\n        student_id: studentId,\n        page,\n        pageSize\n      }\n    }).then(response => {\n      this.tableData = response.data.rows;\n      console.log(this.tableData);\n      this.total = response.data.total;\n    }).catch(error => {\n      this.$message.error('出错啦~');\n      console.error(error);\n    });\n  }\n};","map":{"version":3,"names":["axios","name","data","tableData","currentPage","pageSize","total","methods","handleCurrentChange","val","user","JSON","parse","localStorage","getItem","student_id","parseInt","page","get","params","then","response","rows","catch","error","$message","console","handleSizeChange","formatDate","column","date","Date","time","formattedDate","toLocaleDateString","year","month","day","deleteRow","index","$confirm","confirmButtonText","cancelButtonText","type","splice","message","mounted","studentId","currentPage4","log"],"sources":["src/components/RecordsTest.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-table\r\n      :data=\"tableData\"\r\n      style=\"width: 100% ;position: relative;left:5% \"\r\n      :default-sort = \"{prop: 'time', order: 'descending'}\"\r\n      >\r\n      <el-table-column\r\n        type=\"index\"\r\n        label=\"序号\"\r\n        width=\"180\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"time\"\r\n        label=\"日期\"\r\n        sortable\r\n        :formatter=\"formatDate\"\r\n        width=\"200\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"name\"\r\n        label=\"考试科目\"\r\n        width=\"200\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"core\"\r\n        label=\"成绩\"\r\n        sortable>\r\n      </el-table-column>\r\n      <el-table-column\r\n        label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n        <el-button type=\"text\" @click.native.prevent=\"deleteRow(scope.$index, tableData)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n        <div class=\"block\" style=\"position: relative; left: 180px;top: 30px;\">\r\n        <el-pagination\r\n           @size-change=\"handleSizeChange\"\r\n           @current-change=\"handleCurrentChange\"\r\n          :current-page=\"currentPage\"\r\n          :page-sizes=\"[5, 6, 7, 8]\"\r\n          :page-size=\"this.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"this.total\">\r\n        </el-pagination>\r\n      </div>\r\n</div>\r\n  </template>\r\n  <script>\r\n  import axios from 'axios';\r\n    export default {\r\n        name:\"RecordsTest\",\r\n      data() {\r\n        return {\r\n          tableData: [],\r\n          currentPage: 1,\r\n          pageSize:8,\r\n          total:null\r\n        }\r\n      },\r\n      methods: {\r\n        handleCurrentChange(val){\r\n          this.currentPage = val;\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const student_id = parseInt(user.student_id);\r\n        const page = this.currentPage;\r\n        const pageSize = this.pageSize\r\n        axios.get('http://localhost:4399/records', { \r\n        params: { \r\n          student_id: student_id,\r\n          page,\r\n          pageSize\r\n        } \r\n      })\r\n      .then(response => {\r\n        this.tableData = response.data.rows;\r\n        this.total = response.data.total;\r\n      })\r\n      .catch(error => {\r\n        this.$message.error('出错啦~');\r\n        console.error(error);\r\n      });\r\n        },\r\n        handleSizeChange(val){\r\n          this.pageSize = val;\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const student_id = parseInt(user.student_id);\r\n        const page = this.pageSize;\r\n        const pageSize = this.pageSize\r\n        axios.get('http://localhost:4399/records', { \r\n        params: { \r\n          student_id: student_id,\r\n          page,\r\n          pageSize\r\n        } \r\n      })\r\n      .then(response => {\r\n        this.tableData = response.data.rows;\r\n        this.total = response.data.total;\r\n      })\r\n      .catch(error => {\r\n        this.$message.error('出错啦~');\r\n        console.error(error);\r\n      });\r\n        },\r\n        formatDate(column) {\r\n            const date = new Date(column.time); \r\n            const formattedDate = date.toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\r\n            return formattedDate;\r\n            },\r\n            deleteRow(index, rows) {\r\n            this.$confirm('此操作将删除该记录(非永久性删除), 是否继续?', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n            }).then(() => {\r\n            rows.splice(index, 1);\r\n            this.$message({\r\n                type: 'success',\r\n                message: '删除成功!'\r\n            });\r\n            }).catch(() => {\r\n            this.$message({\r\n                type: 'info',\r\n                message: '已取消删除'\r\n            });          \r\n            });\r\n        }\r\n      },\r\n      mounted(){ \r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const studentId = parseInt(user.studentId);\r\n        const page = this.currentPage4;\r\n        const pageSize = this.pageSize\r\n        axios.get('http://localhost:4399/records', { \r\n        params: { \r\n          student_id: studentId,\r\n          page,\r\n          pageSize\r\n        } \r\n      })\r\n      .then(response => {\r\n        this.tableData = response.data.rows;\r\n        console.log(this.tableData);\r\n        this.total = response.data.total;\r\n      })\r\n      .catch(error => {\r\n        this.$message.error('出错啦~');\r\n        console.error(error);\r\n      });\r\n      }\r\n    }\r\n  </script>"],"mappings":"AAkDA,OAAAA,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,WAAA;MACAC,QAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,oBAAAC,GAAA;MACA,KAAAL,WAAA,GAAAK,GAAA;MACA,MAAAC,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,MAAAC,UAAA,GAAAC,QAAA,CAAAN,IAAA,CAAAK,UAAA;MACA,MAAAE,IAAA,QAAAb,WAAA;MACA,MAAAC,QAAA,QAAAA,QAAA;MACAL,KAAA,CAAAkB,GAAA;QACAC,MAAA;UACAJ,UAAA,EAAAA,UAAA;UACAE,IAAA;UACAZ;QACA;MACA,GACAe,IAAA,CAAAC,QAAA;QACA,KAAAlB,SAAA,GAAAkB,QAAA,CAAAnB,IAAA,CAAAoB,IAAA;QACA,KAAAhB,KAAA,GAAAe,QAAA,CAAAnB,IAAA,CAAAI,KAAA;MACA,GACAiB,KAAA,CAAAC,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;QACAE,OAAA,CAAAF,KAAA,CAAAA,KAAA;MACA;IACA;IACAG,iBAAAlB,GAAA;MACA,KAAAJ,QAAA,GAAAI,GAAA;MACA,MAAAC,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,MAAAC,UAAA,GAAAC,QAAA,CAAAN,IAAA,CAAAK,UAAA;MACA,MAAAE,IAAA,QAAAZ,QAAA;MACA,MAAAA,QAAA,QAAAA,QAAA;MACAL,KAAA,CAAAkB,GAAA;QACAC,MAAA;UACAJ,UAAA,EAAAA,UAAA;UACAE,IAAA;UACAZ;QACA;MACA,GACAe,IAAA,CAAAC,QAAA;QACA,KAAAlB,SAAA,GAAAkB,QAAA,CAAAnB,IAAA,CAAAoB,IAAA;QACA,KAAAhB,KAAA,GAAAe,QAAA,CAAAnB,IAAA,CAAAI,KAAA;MACA,GACAiB,KAAA,CAAAC,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;QACAE,OAAA,CAAAF,KAAA,CAAAA,KAAA;MACA;IACA;IACAI,WAAAC,MAAA;MACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,MAAA,CAAAG,IAAA;MACA,MAAAC,aAAA,GAAAH,IAAA,CAAAI,kBAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,GAAA;MAAA;MACA,OAAAJ,aAAA;IACA;IACAK,UAAAC,KAAA,EAAAjB,IAAA;MACA,KAAAkB,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAvB,IAAA;QACAE,IAAA,CAAAsB,MAAA,CAAAL,KAAA;QACA,KAAAd,QAAA;UACAkB,IAAA;UACAE,OAAA;QACA;MACA,GAAAtB,KAAA;QACA,KAAAE,QAAA;UACAkB,IAAA;UACAE,OAAA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,MAAApC,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA,MAAAiC,SAAA,GAAA/B,QAAA,CAAAN,IAAA,CAAAqC,SAAA;IACA,MAAA9B,IAAA,QAAA+B,YAAA;IACA,MAAA3C,QAAA,QAAAA,QAAA;IACAL,KAAA,CAAAkB,GAAA;MACAC,MAAA;QACAJ,UAAA,EAAAgC,SAAA;QACA9B,IAAA;QACAZ;MACA;IACA,GACAe,IAAA,CAAAC,QAAA;MACA,KAAAlB,SAAA,GAAAkB,QAAA,CAAAnB,IAAA,CAAAoB,IAAA;MACAI,OAAA,CAAAuB,GAAA,MAAA9C,SAAA;MACA,KAAAG,KAAA,GAAAe,QAAA,CAAAnB,IAAA,CAAAI,KAAA;IACA,GACAiB,KAAA,CAAAC,KAAA;MACA,KAAAC,QAAA,CAAAD,KAAA;MACAE,OAAA,CAAAF,KAAA,CAAAA,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export default {\n  name: \"finalCore\",\n  data() {\n    return {\n      formList: [],\n      visibleList: [],\n      pageNo: 1,\n      pageSize: 10,\n      isLoading: false,\n      results: [],\n      core: 0,\n      corrects: []\n    };\n  },\n  mounted() {\n    this.formList = this.$route.query.param1;\n    this.results = this.$route.query.param2;\n    this.visibleList = this.formList.slice(0, this.pageSize);\n    this.$refs.scrollContainer.addEventListener('scroll', this.handleScroll);\n    this.corrects = Array(this.formList.length).fill(null);\n    for (let i = 0; i < this.formList.length; i++) {\n      console.log(this.formList[i].correctAnswer);\n      this.corrects[i] = this.formList[i].correctAnswer;\n    }\n    for (let i = 0; i < this.results.length; i++) {\n      if (this.corrects[i] === String.fromCharCode(64 + this.results[i])) {\n        this.core += 10;\n      }\n    }\n  },\n  methods: {\n    handleScroll() {\n      const container = this.$refs.scrollContainer;\n      const scrollHeight = container.scrollHeight;\n      const scrollTop = container.scrollTop;\n      const clientHeight = container.clientHeight;\n      if (scrollHeight - scrollTop <= clientHeight && !this.isLoading) {\n        this.loadMoreData();\n      }\n    },\n    getAnswerLetter(value) {\n      const options = ['A', 'B', 'C', 'D'];\n      return options[value - 1];\n    },\n    loadMoreData() {\n      this.isLoading = true;\n      setTimeout(() => {\n        const start = this.pageNo * this.pageSize;\n        const end = start + this.pageSize;\n        this.visibleList = [...this.visibleList, ...this.formList.slice(start, end)];\n        this.pageNo++;\n        this.isLoading = false;\n      }, 500);\n    }\n  }\n};","map":{"version":3,"names":["name","data","formList","visibleList","pageNo","pageSize","isLoading","results","core","corrects","mounted","$route","query","param1","param2","slice","$refs","scrollContainer","addEventListener","handleScroll","Array","length","fill","i","console","log","correctAnswer","String","fromCharCode","methods","container","scrollHeight","scrollTop","clientHeight","loadMoreData","getAnswerLetter","value","options","setTimeout","start","end"],"sources":["src/components/FinalCore.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\" ref=\"scrollContainer\">\r\n    <h1>你本次考试的成绩是 <span style=\"color: red;\">{{ core }}</span> 分</h1>\r\n    <div v-for=\"(question, index) in visibleList\" :key=\"index\" class=\"item-style\">\r\n      <div>\r\n        <p>{{ index+1 +' . '+ question.content }}</p>\r\n      </div>\r\n      <div>\r\n        <el-form label-position=\"top\">\r\n            <el-form-item>\r\n              <el-radio-group v-model=\"results[index]\">\r\n                <el-radio :label=\"1\">\r\n                  <span>{{ question.type === 1 ? 'T.' : 'A.' }}</span>\r\n                  <span>{{ question.opa }}</span>\r\n                </el-radio>\r\n              </el-radio-group>\r\n            </el-form-item>\r\n             <el-form-item>\r\n              <el-radio-group v-model=\"results[index]\" >\r\n                <el-radio :label=\"2\">\r\n                  <span>{{ question.type === 1 ? 'F.' : 'B.' }}</span>\r\n                  <span>{{ question.opb }}</span>\r\n                </el-radio>\r\n              </el-radio-group>\r\n            </el-form-item>\r\n              <el-form-item v-if=\"question.type === 1 ? false : true\">\r\n                  <el-radio-group v-model=\"results[index]\">\r\n                    <el-radio :label=\"3\" >\r\n                      {{  'C. ' + question.opc }}\r\n                    </el-radio>\r\n                  </el-radio-group>\r\n                </el-form-item>\r\n              <el-form-item v-if=\"question.type === 1 ? false : true\">\r\n                <el-radio-group v-model=\"results[index]\">\r\n                  <el-radio :label=\"4\"> \r\n                    {{ 'D. ' + question.opd }}</el-radio>\r\n                </el-radio-group>\r\n              </el-form-item>\r\n            </el-form>\r\n      </div>\r\n      <div>\r\n        <span>我的答案: {{ getAnswerLetter(results[index]) }}</span>\r\n        <span style=\"margin-left: 70%;\">正确答案: {{ question.correctAnswer }}</span>\r\n      </div>\r\n      <el-backtop target=\".container\"></el-backtop>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name:\"finalCore\",\r\n  data() {\r\n    return {\r\n      formList: [], \r\n      visibleList: [],\r\n      pageNo: 1,\r\n      pageSize: 10, \r\n      isLoading: false, \r\n      results: [], \r\n      core:0,\r\n      corrects:[]\r\n    };\r\n  },\r\n  mounted() {\r\n    this.formList = this.$route.query.param1;\r\n    this.results = this.$route.query.param2;\r\n    this.visibleList = this.formList.slice(0, this.pageSize); \r\n    this.$refs.scrollContainer.addEventListener('scroll', this.handleScroll);\r\n    this.corrects = Array(this.formList.length).fill(null)\r\n    for (let i = 0; i < this.formList.length; i++) {\r\n      console.log(this.formList[i].correctAnswer);\r\n        this.corrects[i] = this.formList[i].correctAnswer;\r\n      }\r\n      for (let i = 0; i < this.results.length; i++) {\r\n        if(this.corrects[i] === String.fromCharCode(64 + this.results[i]) )\r\n          {\r\n            this.core +=10;\r\n          }\r\n        }\r\n  },\r\n  methods: {\r\n    handleScroll() {\r\n      const container = this.$refs.scrollContainer;\r\n      const scrollHeight = container.scrollHeight;\r\n      const scrollTop = container.scrollTop;\r\n      const clientHeight = container.clientHeight;\r\n      if (scrollHeight - scrollTop <= clientHeight && !this.isLoading) {\r\n        this.loadMoreData();\r\n      }\r\n    },\r\n    getAnswerLetter(value) {\r\n      const options = ['A', 'B', 'C', 'D']; \r\n      return options[value-1]; \r\n    },\r\n    loadMoreData() {\r\n      this.isLoading = true;\r\n      setTimeout(() => {\r\n        const start = this.pageNo * this.pageSize;\r\n        const end = start + this.pageSize;\r\n        this.visibleList = [...this.visibleList, ...this.formList.slice(start, end)];\r\n        this.pageNo++;\r\n        this.isLoading = false;\r\n      }, 500);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  height: 600px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.item-style {\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":"AAkDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,WAAA;MACAC,MAAA;MACAC,QAAA;MACAC,SAAA;MACAC,OAAA;MACAC,IAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAR,QAAA,QAAAS,MAAA,CAAAC,KAAA,CAAAC,MAAA;IACA,KAAAN,OAAA,QAAAI,MAAA,CAAAC,KAAA,CAAAE,MAAA;IACA,KAAAX,WAAA,QAAAD,QAAA,CAAAa,KAAA,SAAAV,QAAA;IACA,KAAAW,KAAA,CAAAC,eAAA,CAAAC,gBAAA,gBAAAC,YAAA;IACA,KAAAV,QAAA,GAAAW,KAAA,MAAAlB,QAAA,CAAAmB,MAAA,EAAAC,IAAA;IACA,SAAAC,CAAA,MAAAA,CAAA,QAAArB,QAAA,CAAAmB,MAAA,EAAAE,CAAA;MACAC,OAAA,CAAAC,GAAA,MAAAvB,QAAA,CAAAqB,CAAA,EAAAG,aAAA;MACA,KAAAjB,QAAA,CAAAc,CAAA,SAAArB,QAAA,CAAAqB,CAAA,EAAAG,aAAA;IACA;IACA,SAAAH,CAAA,MAAAA,CAAA,QAAAhB,OAAA,CAAAc,MAAA,EAAAE,CAAA;MACA,SAAAd,QAAA,CAAAc,CAAA,MAAAI,MAAA,CAAAC,YAAA,WAAArB,OAAA,CAAAgB,CAAA,IACA;QACA,KAAAf,IAAA;MACA;IACA;EACA;EACAqB,OAAA;IACAV,aAAA;MACA,MAAAW,SAAA,QAAAd,KAAA,CAAAC,eAAA;MACA,MAAAc,YAAA,GAAAD,SAAA,CAAAC,YAAA;MACA,MAAAC,SAAA,GAAAF,SAAA,CAAAE,SAAA;MACA,MAAAC,YAAA,GAAAH,SAAA,CAAAG,YAAA;MACA,IAAAF,YAAA,GAAAC,SAAA,IAAAC,YAAA,UAAA3B,SAAA;QACA,KAAA4B,YAAA;MACA;IACA;IACAC,gBAAAC,KAAA;MACA,MAAAC,OAAA;MACA,OAAAA,OAAA,CAAAD,KAAA;IACA;IACAF,aAAA;MACA,KAAA5B,SAAA;MACAgC,UAAA;QACA,MAAAC,KAAA,QAAAnC,MAAA,QAAAC,QAAA;QACA,MAAAmC,GAAA,GAAAD,KAAA,QAAAlC,QAAA;QACA,KAAAF,WAAA,YAAAA,WAAA,UAAAD,QAAA,CAAAa,KAAA,CAAAwB,KAAA,EAAAC,GAAA;QACA,KAAApC,MAAA;QACA,KAAAE,SAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      ruleForm: {\n        examName: '',\n        className: 0,\n        startTime: '',\n        endTime: '',\n        questions: []\n      },\n      selectedQuestions: [],\n      // 已选的题目\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入考试名称',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在 3 到 10 个字符',\n          trigger: 'blur'\n        }],\n        region: [{\n          required: true,\n          message: '请选择考试班级',\n          trigger: 'change'\n        }],\n        date1: [{\n          type: 'date',\n          required: true,\n          message: '请选择日期',\n          trigger: 'change'\n        }],\n        date2: [{\n          type: 'date',\n          required: true,\n          message: '请选择时间',\n          trigger: 'change'\n        }]\n      },\n      tableData: [],\n      multipleSelection: []\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    toggleSelection(rows) {\n      if (rows) {\n        rows.forEach(row => {\n          this.$refs.multipleTable.toggleRowSelection(row);\n        });\n      } else {\n        this.$refs.multipleTable.clearSelection();\n      }\n    },\n    handleSelectionChange(selection) {\n      // 处理选择变化，限制最多选择10个\n      if (selection.length > 10) {\n        this.$refs.multipleTable.clearSelection();\n      } else {\n        this.selectedQuestions = selection;\n      }\n    },\n    handleRowClick(row) {\n      // 处理行点击，切换复选框选中状态\n      if (this.selectedQuestions.length < 10 || this.selectedQuestions.includes(row)) {\n        this.$refs.multipleTable.toggleRowSelection(row);\n      }\n    }\n  },\n  mounted() {\n    axios({\n      method: 'get',\n      url: 'http://localhost:4399/question/getQuestion'\n    }).then(res => {\n      this.tableData = res.data.data.source;\n      console.log(this.questionData);\n    });\n  }\n};","map":{"version":3,"names":["axios","data","ruleForm","examName","className","startTime","endTime","questions","selectedQuestions","rules","name","required","message","trigger","min","max","region","date1","type","date2","tableData","multipleSelection","methods","submitForm","formName","$refs","validate","valid","alert","console","log","resetForm","resetFields","toggleSelection","rows","forEach","row","multipleTable","toggleRowSelection","clearSelection","handleSelectionChange","selection","length","handleRowClick","includes","mounted","method","url","then","res","source","questionData"],"sources":["src/views/element/insertExamPage.vue"],"sourcesContent":["<template>\r\n    <el-container style=\"height: 100%; border: 1px solid #eee;width: 100%;\">\r\n        <el-header style=\"font-size:40px; background-color: rgb(238, 241, 246);text-align: center;\">\r\n            创建考试\r\n        </el-header>\r\n        <el-main>\r\n            <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                <el-form-item label=\"考试名称\" prop=\"name\">\r\n                    <el-input v-model=\"ruleForm.examName\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"考试班级\" prop=\"region\">\r\n                    <el-select v-model=\"ruleForm.className\" placeholder=\"请选择考试班级\">\r\n                        <el-option label=\"软件1班\" value=0></el-option>\r\n                        <el-option label=\"软件2班\" value=1></el-option>\r\n                        <el-option label=\"软件3班\" value=2></el-option>\r\n                        <el-option label=\"软件4班\" value=3></el-option>\r\n                        <el-option label=\"软件5班\" value=4></el-option>\r\n                        <el-option label=\"软件6班\" value=5></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"考试时间\" required>\r\n                    <el-col :span=\"11\">\r\n                        <el-form-item prop=\"date1\">\r\n                            <el-date-picker v-model=\"ruleForm.startTime\" type=\"datetime\"\r\n                                placeholder=\"开始时间\"></el-date-picker>\r\n\r\n                            <el-date-picker v-model=\"ruleForm.endTime\" type=\"datetime\" placeholder=\"结束时间\"></el-date-picker>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                </el-form-item>\r\n\r\n\r\n                <el-form-item label=\"考试题目\" required>\r\n                    <!-- 选择题目表格 -->\r\n                    <el-table ref=\"multipleTable\" :data=\"tableData\" tooltip-effect=\"dark\" style=\"width: 100%\"\r\n                        @selection-change=\"handleSelectionChange\" @row-click=\"handleRowClick\">\r\n                        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n                        <el-table-column type=\"index\" label=\"序号\" width=\"50\"></el-table-column>\r\n                        <el-table-column prop=\"content\" label=\"题干\" width=\"250\"></el-table-column>\r\n                        <el-form-item label=\"题目类型\">\r\n                            <el-select v-model=\"tableData.type\" placeholder=\"请选择\">\r\n                                <el-option label=\"单选题\" :value=\"0\"></el-option>\r\n                                <el-option label=\"判断题\" :value=\"1\"></el-option>\r\n                            </el-select>\r\n                        </el-form-item>\r\n                        <el-table-column prop=\"opa\" label=\"A选项\"></el-table-column>\r\n                        <el-table-column prop=\"opb\" label=\"B选项\"></el-table-column>\r\n                        <el-table-column prop=\"opc\" label=\"C选项\"></el-table-column>\r\n                        <el-table-column prop=\"opd\" label=\"D选项\"></el-table-column>\r\n                        <el-table-column prop=\"currentAnswer\" label=\"正确选项\" width=\"50\"></el-table-column>\r\n                    </el-table>\r\n                </el-form-item>\r\n\r\n                <div style=\"margin-top: 20px\">\r\n                    <el-button @click=\"toggleSelection()\">取消选择</el-button>\r\n                </div>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">立即创建</el-button>\r\n                    <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-main>\r\n    </el-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    data() {\r\n        return {\r\n            ruleForm: {\r\n                examName: '',\r\n                className: 0,\r\n                startTime: '',\r\n                endTime: '',\r\n                questions: [],\r\n            },\r\n            selectedQuestions: [], // 已选的题目\r\n            rules: {\r\n                name: [\r\n                    { required: true, message: '请输入考试名称', trigger: 'blur' },\r\n                    { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\r\n                ],\r\n                region: [\r\n                    { required: true, message: '请选择考试班级', trigger: 'change' }\r\n                ],\r\n                date1: [\r\n                    { type: 'date', required: true, message: '请选择日期', trigger: 'change' }\r\n                ],\r\n                date2: [\r\n                    { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\r\n                ],\r\n            },\r\n            tableData: [],\r\n            multipleSelection: []\r\n        }\r\n    },\r\n    methods: {\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    alert('submit!');\r\n                } else {\r\n                    console.log('error submit!!');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n        toggleSelection(rows) {\r\n            if (rows) {\r\n                rows.forEach(row => {\r\n                    this.$refs.multipleTable.toggleRowSelection(row);\r\n                });\r\n            } else {\r\n                this.$refs.multipleTable.clearSelection();\r\n            }\r\n        },\r\n        handleSelectionChange(selection) {\r\n            // 处理选择变化，限制最多选择10个\r\n            if (selection.length > 10) {\r\n                this.$refs.multipleTable.clearSelection();\r\n            } else {\r\n                this.selectedQuestions = selection;\r\n            }\r\n        },\r\n        handleRowClick(row) {\r\n            // 处理行点击，切换复选框选中状态\r\n            if (this.selectedQuestions.length < 10 || this.selectedQuestions.includes(row)) {\r\n                this.$refs.multipleTable.toggleRowSelection(row);\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n            axios({\r\n                method: 'get',\r\n                url: 'http://localhost:4399/question/getQuestion'\r\n            }).then(res => {\r\n                this.tableData = res.data.data.source;\r\n                console.log(this.questionData);\r\n            })\r\n        }\r\n}\r\n</script>"],"mappings":"AAkEA,OAAAA,KAAA;AACA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,QAAA;QACAC,SAAA;QACAC,SAAA;QACAC,OAAA;QACAC,SAAA;MACA;MACAC,iBAAA;MAAA;MACAC,KAAA;QACAC,IAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAG,MAAA,GACA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAI,KAAA,GACA;UAAAC,IAAA;UAAAP,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAM,KAAA,GACA;UAAAD,IAAA;UAAAP,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAO,SAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,KAAA;QACA;UACAC,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAC,UAAAP,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAQ,WAAA;IACA;IACAC,gBAAAC,IAAA;MACA,IAAAA,IAAA;QACAA,IAAA,CAAAC,OAAA,CAAAC,GAAA;UACA,KAAAX,KAAA,CAAAY,aAAA,CAAAC,kBAAA,CAAAF,GAAA;QACA;MACA;QACA,KAAAX,KAAA,CAAAY,aAAA,CAAAE,cAAA;MACA;IACA;IACAC,sBAAAC,SAAA;MACA;MACA,IAAAA,SAAA,CAAAC,MAAA;QACA,KAAAjB,KAAA,CAAAY,aAAA,CAAAE,cAAA;MACA;QACA,KAAA/B,iBAAA,GAAAiC,SAAA;MACA;IACA;IACAE,eAAAP,GAAA;MACA;MACA,SAAA5B,iBAAA,CAAAkC,MAAA,cAAAlC,iBAAA,CAAAoC,QAAA,CAAAR,GAAA;QACA,KAAAX,KAAA,CAAAY,aAAA,CAAAC,kBAAA,CAAAF,GAAA;MACA;IACA;EACA;EACAS,QAAA;IACA7C,KAAA;MACA8C,MAAA;MACAC,GAAA;IACA,GAAAC,IAAA,CAAAC,GAAA;MACA,KAAA7B,SAAA,GAAA6B,GAAA,CAAAhD,IAAA,CAAAA,IAAA,CAAAiD,MAAA;MACArB,OAAA,CAAAC,GAAA,MAAAqB,YAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
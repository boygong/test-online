{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { jwtDecode } from \"jwt-decode\";\nexport default {\n  data() {\n    return {\n      form: {\n        teacherId: '',\n        password: ''\n      },\n      secretKey: 'itheima',\n      rules: {\n        teacherId: [{\n          required: true,\n          message: '请输入教师ID',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    login() {\n      axios({\n        method: 'post',\n        url: 'http://localhost:4399/teacher/teacherLogin',\n        data: this.form\n      }).then(res => {\n        if (res.data.code === 1) {\n          const token = res.data.data;\n          console.log(token);\n          localStorage.setItem('token', token);\n          this.$message({\n            message: '登录成功',\n            type: 'success'\n          });\n          console.log(\"token\", token);\n          try {\n            const decoded = jwtDecode(token);\n            const userId = decoded.id;\n            console.log(\"解析后的用户ID\", userId);\n          } catch (error) {\n            console.error(\"解析token时发生错误\", error);\n          }\n          this.$router.push('/teacherPage');\n        } else {\n          this.$message({\n            message: '登录失败，账号或密码不正确',\n            type: 'warning'\n          });\n          console.log(\"登录失败\");\n        }\n      });\n      // 在这里处理教师登录逻辑，例如发送登录请求\n      console.log('教师ID:', this.form.teacherId);\n      console.log('密码:', this.form.password);\n      // 你可以在这里添加登录逻辑，例如发送请求进行教师登录验证\n    }\n  }\n};","map":{"version":3,"names":["axios","jwtDecode","data","form","teacherId","password","secretKey","rules","required","message","trigger","methods","login","method","url","then","res","code","token","console","log","localStorage","setItem","$message","type","decoded","userId","id","error","$router","push"],"sources":["src/views/element/teacherLogin.vue"],"sourcesContent":["<template>\r\n    <div class=\"teacher-login-container\">\r\n        <el-form :model=\"form\" :rules=\"rules\" ref=\"loginForm\" label-width=\"80px\">\r\n            <el-form-item label=\"教师ID\" prop=\"teacherId\">\r\n                <el-input v-model=\"form.teacherId\" placeholder=\"请输入教师ID\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"密码\" prop=\"password\">\r\n                <el-input type=\"password\" v-model=\"form.password\" placeholder=\"请输入密码\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            form: {\r\n                teacherId: '',\r\n                password: '',\r\n            },\r\n            secretKey: 'itheima',\r\n            rules: {\r\n                teacherId: [\r\n                    { required: true, message: '请输入教师ID', trigger: 'blur' },\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' },\r\n                ],\r\n            },\r\n        };\r\n    },\r\n    methods: {\r\n        login() {\r\n            axios({\r\n                method: 'post',\r\n                url: 'http://localhost:4399/teacher/teacherLogin',\r\n                data: this.form\r\n            }).then(res => {\r\n                if (res.data.code === 1) {\r\n                    const token = res.data.data;\r\n                    console.log(token);\r\n                    localStorage.setItem('token', token);\r\n                    this.$message({ message: '登录成功', type: 'success' });\r\n\r\n                    console.log(\"token\", token);\r\n                    try {\r\n                        const decoded = jwtDecode(token);\r\n                        const userId = decoded.id;\r\n                        console.log(\"解析后的用户ID\", userId);\r\n                    } catch (error) {\r\n                        console.error(\"解析token时发生错误\", error);\r\n                    }\r\n\r\n                    this.$router.push('/teacherPage');\r\n                } else {\r\n                    this.$message({ message: '登录失败，账号或密码不正确', type: 'warning' });\r\n                    console.log(\"登录失败\");\r\n                }\r\n\r\n            })\r\n            // 在这里处理教师登录逻辑，例如发送登录请求\r\n            console.log('教师ID:', this.form.teacherId);\r\n            console.log('密码:', this.form.password);\r\n            // 你可以在这里添加登录逻辑，例如发送请求进行教师登录验证\r\n        },\r\n    },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.teacher-login-container {\r\n    max-width: 400px;\r\n    margin: 50px auto;\r\n}\r\n</style>\r\n  "],"mappings":";AAiBA,OAAAA,KAAA;AACA,SAAAC,SAAA;AAMA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,SAAA;QACAC,QAAA;MACA;MACAC,SAAA;MACAC,KAAA;QACAH,SAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,MAAA;MACAZ,KAAA;QACAa,MAAA;QACAC,GAAA;QACAZ,IAAA,OAAAC;MACA,GAAAY,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAd,IAAA,CAAAe,IAAA;UACA,MAAAC,KAAA,GAAAF,GAAA,CAAAd,IAAA,CAAAA,IAAA;UACAiB,OAAA,CAAAC,GAAA,CAAAF,KAAA;UACAG,YAAA,CAAAC,OAAA,UAAAJ,KAAA;UACA,KAAAK,QAAA;YAAAd,OAAA;YAAAe,IAAA;UAAA;UAEAL,OAAA,CAAAC,GAAA,UAAAF,KAAA;UACA;YACA,MAAAO,OAAA,GAAAxB,SAAA,CAAAiB,KAAA;YACA,MAAAQ,MAAA,GAAAD,OAAA,CAAAE,EAAA;YACAR,OAAA,CAAAC,GAAA,aAAAM,MAAA;UACA,SAAAE,KAAA;YACAT,OAAA,CAAAS,KAAA,iBAAAA,KAAA;UACA;UAEA,KAAAC,OAAA,CAAAC,IAAA;QACA;UACA,KAAAP,QAAA;YAAAd,OAAA;YAAAe,IAAA;UAAA;UACAL,OAAA,CAAAC,GAAA;QACA;MAEA;MACA;MACAD,OAAA,CAAAC,GAAA,eAAAjB,IAAA,CAAAC,SAAA;MACAe,OAAA,CAAAC,GAAA,aAAAjB,IAAA,CAAAE,QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
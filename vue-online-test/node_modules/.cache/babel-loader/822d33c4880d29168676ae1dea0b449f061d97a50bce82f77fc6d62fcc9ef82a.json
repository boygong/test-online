{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      questionData: [],\n      pageSize: 10,\n      PagerTotal: 16,\n      addDialogVisible: false,\n      addFormData: {\n        // 添加表单的数据\n        id: 0,\n        content: '',\n        type: 0,\n        opa: '',\n        opb: '',\n        opc: '',\n        opd: '',\n        currentAnswer: ''\n        // 其他表单项\n      },\n\n      dialogFormVisible: false,\n      editFormData: {\n        id: \"\",\n        studentId: \"\",\n        name: \"\",\n        className: \"\",\n        password: \"\"\n        // 其他表单项\n      }\n    };\n  },\n\n  methods: {\n    handlePageChange(page) {\n      const currentPage = page;\n      const pageSize = this.pageSize;\n      axios.get(`http://localhost:4399/question/getQuestion?currentPage=${currentPage}&pageSize=${pageSize}`).then(res => {\n        this.questionData = res.data.data.source;\n      });\n    },\n    openAddDialog() {\n      // 打开添加对话框\n      this.addDialogVisible = true;\n    },\n    closeAddDialog() {\n      // 关闭添加对话框\n      this.addDialogVisible = false;\n    },\n    saveQuestionData() {\n      // ... 其他逻辑\n      axios({\n        method: 'post',\n        data: this.addFormData,\n        url: 'http://localhost:4399/question/questionInsert'\n      }).then(res => {\n        if (res.data.msg == \"success\") {\n          this.$message.success(\"插入成功\");\n        } else {\n          this.$message.warning(\"插入失败\");\n        }\n      });\n      // 请求成功后关闭对话框\n      this.dialogFormVisible = false;\n      this.addDialogVisible = false;\n    },\n    openEditDialog(question) {\n      // 打开编辑对话框，并填充表单数据\n      this.dialogFormVisible = true;\n      this.editFormData = {\n        ...question\n      };\n      this.originalStudentData = {\n        ...question\n      }; // 存储原始数据\n      this.currentQuestion = question;\n    },\n    isDataEqual(data1, data2) {\n      // 比较两个数据对象是否相等\n      // 这里可以根据你的数据结构进行比较\n      return JSON.stringify(data1) === JSON.stringify(data2);\n    },\n    noChange() {\n      //没有修改，点击取消之后的函数\n      this.dialogFormVisible = false;\n      this.$message(\"取消修改\");\n    }\n  },\n  mounted() {\n    axios({\n      method: 'get',\n      url: 'http://localhost:4399/question/getQuestion'\n    }).then(res => {\n      this.questionData = res.data.data.source;\n      console.log(this.questionData);\n    });\n  }\n};","map":{"version":3,"names":["axios","data","questionData","pageSize","PagerTotal","addDialogVisible","addFormData","id","content","type","opa","opb","opc","opd","currentAnswer","dialogFormVisible","editFormData","studentId","name","className","password","methods","handlePageChange","page","currentPage","get","then","res","source","openAddDialog","closeAddDialog","saveQuestionData","method","url","msg","$message","success","warning","openEditDialog","question","originalStudentData","currentQuestion","isDataEqual","data1","data2","JSON","stringify","noChange","mounted","console","log"],"sources":["src/views/element/questionPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-container style=\"height: 700px; border: 1px solid #eee;width: 2000px;\">\r\n            <el-header style=\"font-size:40px; background-color: rgb(238, 241, 246)\">线上考试系统教师端</el-header>\r\n            <el-container>\r\n                <el-aside width=\"200px\"><el-menu :default-openeds=\"['1', '3']\">\r\n                        <el-submenu index=\"1\">\r\n                            <template slot=\"title\"><i class=\"el-icon-message\"></i>功能</template>\r\n                            <el-menu-item-group>\r\n                                <el-menu-item index=\"1-1\">\r\n                                    <router-link to=\"/teacherPage\" exact\r\n                                        style=\"font-size: large;color: black; text-decoration: none;\">学生管理</router-link>\r\n                                </el-menu-item>\r\n                                <el-menu-item index=\"1-2\">\r\n                                    <router-link to=\"/questionPage\" exact\r\n                                        style=\"font-size: large;color: black; text-decoration: none;\">题目管理</router-link>\r\n                                </el-menu-item>\r\n                                <el-menu-item index=\"1-3\">考试管理</el-menu-item>\r\n                            </el-menu-item-group>\r\n                        </el-submenu>\r\n                    </el-menu>\r\n                </el-aside>\r\n                <el-main>\r\n                    <el-button style=\"float: right; margin-right: 150px;\" type=\"primary\" icon=\"el-icon-circle-plus-outline\"\r\n                        @click=\"openAddDialog\">添加题目</el-button>\r\n\r\n                    <el-dialog title=\"添加题目\" :visible.sync=\"addDialogVisible\">\r\n                        <el-form :model=\"addFormData\" label-width=\"100px\">\r\n                            <el-form-item label=\"题干\">\r\n                                <el-input v-model=\"addFormData.content\" type=\"textarea\" autosize></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"题目类型\">\r\n                                <el-select v-model=\"addFormData.type\" placeholder=\"请选择\">\r\n                                    <el-option label=\"单选题\" value='0'></el-option>\r\n                                    <el-option label=\"判断题\" value='1'></el-option>\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"选项A\">\r\n                                <el-input v-model=\"addFormData.opa\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"选项B\">\r\n                                <el-input v-model=\"addFormData.opb\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"选项C\">\r\n                                <el-input v-model=\"addFormData.opc\" :disabled=\"addFormData.type==0? false:true\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"选项D\">\r\n                                <el-input v-model=\"addFormData.opd\" :disabled=\"addFormData.type==0? false:true\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"正确答案\">\r\n                                <el-select v-model=\"addFormData.currentAnswer\" placeholder=\"请选择正确选项\">\r\n                                    <el-option label=\"A选项\" value='A'></el-option>\r\n                                    <el-option label=\"B选项\" value='B'></el-option>\r\n                                    <el-option label=\"C选项\" value='C' :disabled=\"addFormData.type==0? false:true\"></el-option>\r\n                                    <el-option label=\"D选项\" value='D' :disabled=\"addFormData.type==0? false:true\"></el-option>\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <!-- 其他表单项 -->\r\n\r\n                            <el-form-item>\r\n                                <el-button type=\"primary\" @click=\"saveQuestionData\">确定</el-button>\r\n                                <el-button @click=\"closeAddDialog\">取消</el-button>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                    </el-dialog>\r\n\r\n                     <!--  编辑表单-->\r\n                    <el-dialog title=\"编辑学生信息\" :visible.sync=\"dialogFormVisible\">\r\n                        <el-form :model=\"editFormData\" ref=\"editForm\" label-width=\"100px\">\r\n                            <el-form-item label=\"学号\">\r\n                                <el-input v-model=\"editFormData.studentId\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"姓名\">\r\n                                <el-input v-model=\"editFormData.name\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"班级\">\r\n                                <el-input v-model=\"editFormData.className\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"密码\">\r\n                                <el-input v-model=\"editFormData.password\"></el-input>\r\n                            </el-form-item>\r\n                            <!-- 其他表单项 -->\r\n\r\n                            <el-form-item>\r\n                                <el-button type=\"primary\" @click=\"saveQuestionData\">确定</el-button>\r\n                                <el-button type=\"info\" @click=\"noChange\">取消</el-button>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                    </el-dialog>\r\n\r\n\r\n                    <el-table :data=\"questionData\" style=\"width: 100%\">\r\n                        <el-table-column prop=\"id\" label=\"序号\" width=\"50\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"content\" label=\"题干\" width=\"250\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"type\" label=\"类型\" width=\"70\">\r\n                            <template slot-scope=\"scope\">\r\n                                <span v-if=\"scope.row.type===0\">单选题</span>\r\n                                <span v-if=\"scope.row.type===1\">判断题</span>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"opa\" label=\"A选项\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"opb\" label=\"B选项\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"opc\" label=\"C选项\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"opd\" label=\"D选项\" >\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"currentAnswer\" label=\"正确选项\" width=\"50\">\r\n                        </el-table-column>\r\n                        <el-table-column label=\"编辑学生信息\" width=\"220\">\r\n                            <el-button type=\"primary\">编辑</el-button>\r\n                        </el-table-column>\r\n                    </el-table>\r\n\r\n                    <el-pagination :page-size=\"pageSize\" layout=\"prev, pager, next\" :total=\"PagerTotal\"\r\n                        @current-change=\"handlePageChange\"></el-pagination>\r\n                </el-main>\r\n            </el-container>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            questionData: [],\r\n            pageSize: 10,\r\n            PagerTotal: 16,\r\n            addDialogVisible: false,\r\n            addFormData: {\r\n                // 添加表单的数据\r\n                id:0,\r\n                content: '',\r\n                type: 0,\r\n                opa: '',\r\n                opb: '',\r\n                opc: '',\r\n                opd: '',\r\n                currentAnswer: ''\r\n                // 其他表单项\r\n            },\r\n            dialogFormVisible: false,\r\n            editFormData: {\r\n                id: \"\",\r\n                studentId: \"\",\r\n                name: \"\",\r\n                className: \"\",\r\n                password: \"\",\r\n                // 其他表单项\r\n            },\r\n        }\r\n    },\r\n    methods: {\r\n        handlePageChange(page) {\r\n            const currentPage = page;\r\n            const pageSize = this.pageSize;\r\n\r\n            axios.get(`http://localhost:4399/question/getQuestion?currentPage=${currentPage}&pageSize=${pageSize}`)\r\n                .then((res) => {\r\n                    this.questionData = res.data.data.source;\r\n                })\r\n        },\r\n        openAddDialog() {\r\n            // 打开添加对话框\r\n            this.addDialogVisible = true;\r\n        },\r\n\r\n        closeAddDialog() {\r\n            // 关闭添加对话框\r\n            this.addDialogVisible = false;\r\n        },\r\n        saveQuestionData() {\r\n            // ... 其他逻辑\r\n            axios({\r\n                method:'post',\r\n                data:this.addFormData,\r\n                url: 'http://localhost:4399/question/questionInsert'\r\n            }).then(res=>{\r\n                if(res.data.msg==\"success\"){\r\n                    this.$message.success(\"插入成功\");\r\n                }else{\r\n                    this.$message.warning(\"插入失败\");\r\n                }\r\n            })\r\n            // 请求成功后关闭对话框\r\n            this.dialogFormVisible = false;\r\n            this.addDialogVisible = false;\r\n        },\r\n        openEditDialog(question) {\r\n            // 打开编辑对话框，并填充表单数据\r\n            this.dialogFormVisible = true;\r\n            this.editFormData = { ...question };\r\n            this.originalStudentData = { ...question }; // 存储原始数据\r\n            this.currentQuestion = question;\r\n        },\r\n        isDataEqual(data1, data2) {\r\n            // 比较两个数据对象是否相等\r\n            // 这里可以根据你的数据结构进行比较\r\n            return JSON.stringify(data1) === JSON.stringify(data2);\r\n        },\r\n        noChange() {\r\n            //没有修改，点击取消之后的函数\r\n            this.dialogFormVisible = false;\r\n            this.$message(\"取消修改\")\r\n        }\r\n    },\r\n    mounted() {\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:4399/question/getQuestion'\r\n        }).then(res => {\r\n            this.questionData = res.data.data.source;\r\n            console.log(this.questionData);\r\n        })\r\n    }\r\n}\r\n</script>\r\n\r\n<style></style>"],"mappings":"AA8HA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,QAAA;MACAC,UAAA;MACAC,gBAAA;MACAC,WAAA;QACA;QACAC,EAAA;QACAC,OAAA;QACAC,IAAA;QACAC,GAAA;QACAC,GAAA;QACAC,GAAA;QACAC,GAAA;QACAC,aAAA;QACA;MACA;;MACAC,iBAAA;MACAC,YAAA;QACAT,EAAA;QACAU,SAAA;QACAC,IAAA;QACAC,SAAA;QACAC,QAAA;QACA;MACA;IACA;EACA;;EACAC,OAAA;IACAC,iBAAAC,IAAA;MACA,MAAAC,WAAA,GAAAD,IAAA;MACA,MAAApB,QAAA,QAAAA,QAAA;MAEAH,KAAA,CAAAyB,GAAA,2DAAAD,WAAA,aAAArB,QAAA,IACAuB,IAAA,CAAAC,GAAA;QACA,KAAAzB,YAAA,GAAAyB,GAAA,CAAA1B,IAAA,CAAAA,IAAA,CAAA2B,MAAA;MACA;IACA;IACAC,cAAA;MACA;MACA,KAAAxB,gBAAA;IACA;IAEAyB,eAAA;MACA;MACA,KAAAzB,gBAAA;IACA;IACA0B,iBAAA;MACA;MACA/B,KAAA;QACAgC,MAAA;QACA/B,IAAA,OAAAK,WAAA;QACA2B,GAAA;MACA,GAAAP,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAA1B,IAAA,CAAAiC,GAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;QACA;UACA,KAAAD,QAAA,CAAAE,OAAA;QACA;MACA;MACA;MACA,KAAAtB,iBAAA;MACA,KAAAV,gBAAA;IACA;IACAiC,eAAAC,QAAA;MACA;MACA,KAAAxB,iBAAA;MACA,KAAAC,YAAA;QAAA,GAAAuB;MAAA;MACA,KAAAC,mBAAA;QAAA,GAAAD;MAAA;MACA,KAAAE,eAAA,GAAAF,QAAA;IACA;IACAG,YAAAC,KAAA,EAAAC,KAAA;MACA;MACA;MACA,OAAAC,IAAA,CAAAC,SAAA,CAAAH,KAAA,MAAAE,IAAA,CAAAC,SAAA,CAAAF,KAAA;IACA;IACAG,SAAA;MACA;MACA,KAAAhC,iBAAA;MACA,KAAAoB,QAAA;IACA;EACA;EACAa,QAAA;IACAhD,KAAA;MACAgC,MAAA;MACAC,GAAA;IACA,GAAAP,IAAA,CAAAC,GAAA;MACA,KAAAzB,YAAA,GAAAyB,GAAA,CAAA1B,IAAA,CAAAA,IAAA,CAAA2B,MAAA;MACAqB,OAAA,CAAAC,GAAA,MAAAhD,YAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
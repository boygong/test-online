{"ast":null,"code":"import axios from 'axios';\nimport Chart from 'chart.js/auto';\nexport default {\n  name: \"TestAbout\",\n  data() {\n    return {\n      averageScore: null,\n      total: null,\n      maxcore: null,\n      mincore: null,\n      bestCore: null,\n      middleCore: null,\n      badCore: null,\n      chartData: null\n    };\n  },\n  mounted() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    axios.get('http://localhost:4399/findAllCore', {\n      params: {\n        student_id: parseInt(user.student_id)\n      }\n    }).then(response => {\n      this.bestCore = response.data.bestCore;\n      this.middleCore = response.data.middleCore;\n      this.badCore = response.data.badCore;\n      this.total = response.data.total;\n      this.averageScore = response.data.averageCore;\n      this.maxcore = response.data.maxCore;\n      this.mincore = response.data.minCore;\n\n      // 初始化 chartData 对象\n      this.chartData = {\n        labels: ['>90', '90~60', '<60'],\n        datasets: [{\n          data: [this.bestCore, this.middleCore, this.badCore],\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n          hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n        }]\n      };\n\n      // 重新渲染图表\n      this.renderChart();\n    }).catch(error => {\n      console.error(error);\n      this.$message.error('出错啦~');\n    });\n  },\n  methods: {\n    renderChart() {\n      const ctx = this.$refs.pieChart.getContext('2d');\n      new Chart(ctx, {\n        type: 'pie',\n        data: this.chartData\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Chart","name","data","averageScore","total","maxcore","mincore","bestCore","middleCore","badCore","chartData","mounted","user","JSON","parse","localStorage","getItem","get","params","student_id","parseInt","then","response","averageCore","maxCore","minCore","labels","datasets","backgroundColor","hoverBackgroundColor","renderChart","catch","error","console","$message","methods","ctx","$refs","pieChart","getContext","type"],"sources":["src/components/TestAbout.vue"],"sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <div style=\"width: 400px;height: 400px;\">\r\n      <h2>您所有的考试成绩分布如下:</h2><br>\r\n      <canvas ref=\"pieChart\"></canvas>\r\n    </div>\r\n    <div class=\"right\">\r\n      <h1>您一共经历了 {{ total }} 场考试</h1>\r\n      <h1>其中：</h1>\r\n      <h1>最好的成绩是 {{ maxcore }} 分</h1>\r\n      <h1>最差的成绩是 {{ mincore }} 分</h1>\r\n      <h1>平均成绩是 {{ averageScore }} 分</h1>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default {\r\n  name: \"TestAbout\",\r\n  data() {\r\n    return {\r\n      averageScore:null,\r\n      total:null,\r\n      maxcore:null,\r\n      mincore:null,\r\n      bestCore: null,\r\n      middleCore: null,\r\n      badCore: null,\r\n      chartData: null\r\n    };\r\n  },\r\n  mounted() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    axios.get('http://localhost:4399/findAllCore', { params: { student_id: parseInt(user.student_id) } })\r\n      .then(response => {\r\n        this.bestCore = response.data.bestCore;\r\n        this.middleCore = response.data.middleCore;\r\n        this.badCore = response.data.badCore;\r\n        this.total = response.data.total;\r\n        this.averageScore =response.data.averageCore;\r\n        this.maxcore = response.data.maxCore;\r\n        this.mincore = response.data.minCore\r\n\r\n        // 初始化 chartData 对象\r\n        this.chartData = {\r\n          labels: ['>90', '90~60', '<60'],\r\n          datasets: [{\r\n            data: [this.bestCore, this.middleCore, this.badCore],\r\n            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n            hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\r\n          }]\r\n        };\r\n\r\n        // 重新渲染图表\r\n        this.renderChart();\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        this.$message.error('出错啦~');\r\n      });\r\n  },\r\n  methods: {\r\n    renderChart() {\r\n      const ctx = this.$refs.pieChart.getContext('2d');\r\n      new Chart(ctx, {\r\n        type: 'pie',\r\n        data: this.chartData\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.main{\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n.right{\r\n  position: relative;\r\n  top: 80px;\r\n  left: 50px;\r\n}\r\n</style>\r\n"],"mappings":"AAiBA,OAAAA,KAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,KAAA;MACAC,OAAA;MACAC,OAAA;MACAC,QAAA;MACAC,UAAA;MACAC,OAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACAjB,KAAA,CAAAkB,GAAA;MAAAC,MAAA;QAAAC,UAAA,EAAAC,QAAA,CAAAR,IAAA,CAAAO,UAAA;MAAA;IAAA,GACAE,IAAA,CAAAC,QAAA;MACA,KAAAf,QAAA,GAAAe,QAAA,CAAApB,IAAA,CAAAK,QAAA;MACA,KAAAC,UAAA,GAAAc,QAAA,CAAApB,IAAA,CAAAM,UAAA;MACA,KAAAC,OAAA,GAAAa,QAAA,CAAApB,IAAA,CAAAO,OAAA;MACA,KAAAL,KAAA,GAAAkB,QAAA,CAAApB,IAAA,CAAAE,KAAA;MACA,KAAAD,YAAA,GAAAmB,QAAA,CAAApB,IAAA,CAAAqB,WAAA;MACA,KAAAlB,OAAA,GAAAiB,QAAA,CAAApB,IAAA,CAAAsB,OAAA;MACA,KAAAlB,OAAA,GAAAgB,QAAA,CAAApB,IAAA,CAAAuB,OAAA;;MAEA;MACA,KAAAf,SAAA;QACAgB,MAAA;QACAC,QAAA;UACAzB,IAAA,QAAAK,QAAA,OAAAC,UAAA,OAAAC,OAAA;UACAmB,eAAA;UACAC,oBAAA;QACA;MACA;;MAEA;MACA,KAAAC,WAAA;IACA,GACAC,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA,KAAAE,QAAA,CAAAF,KAAA;IACA;EACA;EACAG,OAAA;IACAL,YAAA;MACA,MAAAM,GAAA,QAAAC,KAAA,CAAAC,QAAA,CAAAC,UAAA;MACA,IAAAvC,KAAA,CAAAoC,GAAA;QACAI,IAAA;QACAtC,IAAA,OAAAQ;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
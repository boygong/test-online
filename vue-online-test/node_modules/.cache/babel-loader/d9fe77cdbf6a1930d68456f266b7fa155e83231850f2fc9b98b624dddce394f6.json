{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      tableData: [],\n      formInline: {\n        studentId: '',\n        studentName: '',\n        className: ''\n      },\n      pageSize: 10,\n      pagerCount: 11,\n      total\n    };\n  },\n  methods: {\n    findStudent() {\n      axios({\n        method: 'get',\n        url: 'https://localhost:4399/teacher/getStudents'\n      }).then(function (res) {\n        console.log(res.data.data);\n        // studentList=res.data.data;\n      });\n    },\n\n    handlePageChange(page) {\n      const currentPage = page;\n      const pageSize = this.pageSize;\n      axios.get(`http://localhost:4399/student/getStudentByPage?page=${currentPage}&pageSize=${pageSize}`).then(response => {\n        this.tableData = response.data.data;\n        this.total = response.data.totalPages;\n      });\n    }\n  },\n  mounted() {\n    axios({\n      method: 'get',\n      url: 'http://localhost:4399/student/getAllStudent'\n    }).then(res => {\n      console.log(res.data.data);\n      this.tableData = res.data.data;\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n};","map":{"version":3,"names":["axios","data","tableData","formInline","studentId","studentName","className","pageSize","pagerCount","total","methods","findStudent","method","url","then","res","console","log","handlePageChange","page","currentPage","get","response","totalPages","mounted","catch","err"],"sources":["src/views/element/teacherPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-container style=\"height: 700px; border: 1px solid #eee;width: 2000px;\">\r\n            <el-header style=\"font-size:40px; background-color: rgb(238, 241, 246)\">线上考试系统教师端</el-header>\r\n            <el-container>\r\n                <el-aside width=\"200px\"><el-menu :default-openeds=\"['1', '3']\">\r\n                        <el-submenu index=\"1\">\r\n                            <template slot=\"title\"><i class=\"el-icon-message\"></i>功能</template>\r\n                            <el-menu-item-group>\r\n                                <el-menu-item index=\"1-1\">学生管理</el-menu-item>\r\n                                <el-menu-item index=\"1-2\">题目管理</el-menu-item>\r\n                                <el-menu-item index=\"1-3\">考试管理</el-menu-item>\r\n                            </el-menu-item-group>\r\n                        </el-submenu>\r\n\r\n                    </el-menu>\r\n                </el-aside>\r\n                <el-main>\r\n                    <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n                        <el-form-item label=\"学号\">\r\n                            <el-input v-model=\"formInline.studentId\" placeholder=\"学生学号\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"姓名\">\r\n                            <el-input v-model=\"formInline.studentName\" placeholder=\"学生姓名\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"班级\">\r\n                            <el-input v-model=\"formInline.className\" placeholder=\"学生班级\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item>\r\n                            <el-button type=\"primary\" @click=\"findStudent\">查询</el-button>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                    <el-table :data=\"tableData\" style=\"width: 100%\">\r\n                        <el-table-column prop=\"id\" label=\"序号\" width=\"220\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"studentId\" label=\"学号\" width=\"220\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"name\" label=\"姓名\" width=\"220\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"className\" label=\"班级\" width=\"220\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"password\" label=\"学生密码\" width=\"220\">\r\n                        </el-table-column>\r\n                        <el-table-column label=\"查看学生考试信息\" width=\"220\">\r\n                            <el-button type=\"info\" plain>查看</el-button>\r\n                        </el-table-column>\r\n                        <el-table-column label=\"编辑学生信息\" width=\"220\">\r\n                            <el-button type=\"primary\">编辑</el-button>\r\n                        </el-table-column>\r\n                    </el-table>\r\n                    <el-pagination :page-size=\"pageSize\" :pager-count=\"pagerCount\" layout=\"prev, pager, next\" :total=\"total\"\r\n                        @current-change=\"handlePageChange\"></el-pagination>\r\n                </el-main>\r\n            </el-container>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    data() {\r\n        return {\r\n            tableData: [],\r\n            formInline: {\r\n                studentId: '',\r\n                studentName: '',\r\n                className: ''\r\n            },\r\n            pageSize: 10,\r\n            pagerCount: 11,\r\n            total\r\n        }\r\n    },\r\n    methods: {\r\n        findStudent() {\r\n            axios({\r\n                method: 'get',\r\n                url: 'https://localhost:4399/teacher/getStudents'\r\n            }).then(function (res) {\r\n                console.log(res.data.data);\r\n                // studentList=res.data.data;\r\n            })\r\n        },\r\n        handlePageChange(page) {\r\n            const currentPage = page;\r\n            const pageSize = this.pageSize;\r\n\r\n            axios.get(`http://localhost:4399/student/getStudentByPage?page=${currentPage}&pageSize=${pageSize}`)\r\n                .then((response) => {\r\n                    this.tableData = response.data.data;\r\n                    this.total = response.data.totalPages;\r\n                })\r\n\r\n        }\r\n    },\r\n    mounted() {\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:4399/student/getAllStudent'\r\n        }).then(res => {\r\n            console.log(res.data.data);\r\n            this.tableData = res.data.data;\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n</script>\r\n\r\n<style></style>"],"mappings":"AA2DA,OAAAA,KAAA;AACA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,UAAA;QACAC,SAAA;QACAC,WAAA;QACAC,SAAA;MACA;MACAC,QAAA;MACAC,UAAA;MACAC;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACAX,KAAA;QACAY,MAAA;QACAC,GAAA;MACA,GAAAC,IAAA,WAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAAd,IAAA,CAAAA,IAAA;QACA;MACA;IACA;;IACAiB,iBAAAC,IAAA;MACA,MAAAC,WAAA,GAAAD,IAAA;MACA,MAAAZ,QAAA,QAAAA,QAAA;MAEAP,KAAA,CAAAqB,GAAA,wDAAAD,WAAA,aAAAb,QAAA,IACAO,IAAA,CAAAQ,QAAA;QACA,KAAApB,SAAA,GAAAoB,QAAA,CAAArB,IAAA,CAAAA,IAAA;QACA,KAAAQ,KAAA,GAAAa,QAAA,CAAArB,IAAA,CAAAsB,UAAA;MACA;IAEA;EACA;EACAC,QAAA;IACAxB,KAAA;MACAY,MAAA;MACAC,GAAA;IACA,GAAAC,IAAA,CAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAAd,IAAA,CAAAA,IAAA;MACA,KAAAC,SAAA,GAAAa,GAAA,CAAAd,IAAA,CAAAA,IAAA;IACA,GAAAwB,KAAA,CAAAC,GAAA;MACAV,OAAA,CAAAC,GAAA,CAAAS,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}